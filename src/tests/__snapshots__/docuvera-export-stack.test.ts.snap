// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack test snapshot 1`] = `
Object {
  "Parameters": Any<Object>,
  "Resources": Object {
    "ConvertFnCAE452AA": Object {
      "DependsOn": Array [
        "ConvertFnServiceRoleA324E8EB",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ConvertFnServiceRoleA324E8EB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ConvertFnServiceRoleA324E8EB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NotesApi2FFCBC92": Object {
      "Properties": Object {
        "CorsConfiguration": Object {
          "AllowHeaders": Array [
            "Content-Type",
          ],
          "AllowMethods": Array [
            "GET",
            "POST",
          ],
          "AllowOrigins": Array [
            "*",
          ],
        },
        "Name": "NotesApi",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "NotesApiDefaultStage018487EA": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "NotesApi2FFCBC92",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "NotesApiGETnotes1ADF0919": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "NotesApi2FFCBC92",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "GET /notes",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "NotesApiGETnotesReadIntegration044C0BBC",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "NotesApiGETnotesReadIntegration044C0BBC": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "NotesApi2FFCBC92",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "ReadNotesFn9B772BEA",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "NotesApiGETnotesReadIntegrationPermission44DDAC24": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ReadNotesFn9B772BEA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "NotesApi2FFCBC92",
              },
              "/*/*/notes",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "NotesApiPOSTnotes6D069734": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "NotesApi2FFCBC92",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "POST /notes",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "NotesApiPOSTnotesWriteIntegration94DB7B6D",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "NotesApiPOSTnotesWriteIntegration94DB7B6D": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "NotesApi2FFCBC92",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "WriteNoteFn75A93DA3",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "NotesApiPOSTnotesWriteIntegrationPermissionCE0F7A77": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "WriteNoteFn75A93DA3",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "NotesApi2FFCBC92",
              },
              "/*/*/notes",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "NotesTableD0D0D2F1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "sk",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "sk",
            "KeyType": "RANGE",
          },
        ],
        "TableName": "NotesTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "ReadNotesFn9B772BEA": Object {
      "DependsOn": Array [
        "ReadNotesFnServiceRoleDefaultPolicyF0CAA4ED",
        "ReadNotesFnServiceRole4182CAE7",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ReadNotesFnServiceRole4182CAE7",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ReadNotesFnServiceRole4182CAE7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ReadNotesFnServiceRoleDefaultPolicyF0CAA4ED": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "NotesTableD0D0D2F1",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ReadNotesFnServiceRoleDefaultPolicyF0CAA4ED",
        "Roles": Array [
          Object {
            "Ref": "ReadNotesFnServiceRole4182CAE7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WriteNoteFn75A93DA3": Object {
      "DependsOn": Array [
        "WriteNoteFnServiceRoleDefaultPolicyE6121555",
        "WriteNoteFnServiceRoleEC618145",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "WriteNoteFnServiceRoleEC618145",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "WriteNoteFnServiceRoleDefaultPolicyE6121555": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "NotesTableD0D0D2F1",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WriteNoteFnServiceRoleDefaultPolicyE6121555",
        "Roles": Array [
          Object {
            "Ref": "WriteNoteFnServiceRoleEC618145",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WriteNoteFnServiceRoleEC618145": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
